spring.application.name=cart-service
server.port=8081

# env
env.kafka.ip=${KAFKA_IP:34.70.120.97:9092}
env.postgresql.name=${POSTGRESQL_DATABASE_NAME:producer}

# eureka server
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
# Zipkin server URL
management.zipkin.tracing.endpoint=${ZIPKIN_URL:http://localhost:9411/api/v2/spans}

# 数据源配置
spring.datasource.url=${POSTGRESQL_URL:jdbc:postgresql://34.70.120.97:4399/${env.postgresql.name}}
spring.datasource.username=${POSTGRESQL_USERNAME:user}
spring.datasource.password=${POSTGRESQL_PASSWORD:8899783}
spring.datasource.driver-class-name=org.postgresql.Driver

# init sql
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.default_schema=${POSTGRESQL_SCHEMA:carts}

# Enable all Actuator endpoints
#management.endpoints.enabled-by-default=true
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.orderService.register-health-indicator=true
resilience4j.circuitbreaker.instances.orderService.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.orderService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.orderService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.orderService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.orderService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.orderService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.orderService.sliding-window-size=10
resilience4j.circuitbreaker.instances.orderService.sliding-window-type=COUNT_BASED
##  Retry Configuration
#resilience4j.retry.instances.orderService.max-attempts=5
#resilience4j.retry.instances.orderService.waitDuration=10000
##  RateLimiter Configuration
#resilience4j.ratelimiter.instances.orderService.limitRefreshPeriod=1000
#resilience4j.ratelimiter.instances.orderService.limitForPeriod=5
#resilience4j.ratelimiter.instances.orderService.timeoutDuration=3000
#resilience4j.ratelimiter.instances.orderService.registerHealthIndicator=true
#resilience4j.ratelimiter.instances.orderService.eventConsumerBufferSize=100
##  ThreadPool Bulkhead Configuration
#resilience4j.thread-pool-bulkhead.instances.orderService.maxThreadPoolSize=3
#resilience4j.thread-pool-bulkhead.instances.orderService.coreThreadPoolSize=2
#resilience4j.thread-pool-bulkhead.instances.orderService.queueCapacity=1
#resilience4j.thread-pool-bulkhead.instances.orderService.keepAliveDuration=20
##  Semaphore Bulkhead Configuration
#resilience4j.bulkhead.instances.orderService.maxConcurrentCalls=2
#resilience4j.bulkhead.instances.orderService.maxWaitDuration=5000

# logs
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
logging.file.name=./logs/cart.log

